/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import BlockChain.Parametres;
import BlockChain.BlockChain;
import java.awt.Color;
import java.util.Random;

/**
 *
 * @author Pierre
 */
public class Interface extends javax.swing.JFrame {
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	BlockChain blockchain; //Blockchain
    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        onglet1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        CreerBlockchain = new javax.swing.JButton();
        nbBlocks = new javax.swing.JSpinner();
        NbBlockJlabel = new javax.swing.JLabel();
        DifficulteeJlabel = new javax.swing.JLabel();
        difficultee = new javax.swing.JSpinner();
        nbMaxJlabel2 = new javax.swing.JLabel();
        nbMaxJlabel1 = new javax.swing.JLabel();
        nbTransMax = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        quit1 = new javax.swing.JButton();
        WoredCoinJlabel = new javax.swing.JLabel();
        Signature = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        BlockchainCreationJlabel = new javax.swing.JLabel();
        onglet2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ImporterBlockchain = new javax.swing.JButton();
        ImporterBlockchainTXT = new javax.swing.JTextField();
        importerJSONjlabel = new javax.swing.JLabel();
        quit2 = new javax.swing.JButton();
        ImporterJSONJlabel = new javax.swing.JLabel();
        RestaurerBlockChainJlabel = new javax.swing.JLabel();
        signature2 = new javax.swing.JLabel();
        reset2 = new javax.swing.JButton();
        onglet3 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        VerificationBlockchain = new javax.swing.JButton();
        VerificationJlabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        AfficherBlock = new javax.swing.JButton();
        AfficherBlockTXT = new javax.swing.JSpinner();
        OUJlabel = new javax.swing.JLabel();
        AfficherBlockchain = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        SauvegarderBlockchain = new javax.swing.JButton();
        SauvegarderBlockchainTXT = new javax.swing.JTextField();
        EntreJsonSauvegardeJlabel = new javax.swing.JLabel();
        quit3 = new javax.swing.JButton();
        signature3 = new javax.swing.JLabel();
        SauvegarderBlockCHainJlabel = new javax.swing.JLabel();
        Affichagejlabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        CreerBlockchain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CreerBlockchain.setText("Créer la Blockchain");
        CreerBlockchain.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CreerBlockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreerBlockchainActionPerformed(evt);
            }
        });

        nbBlocks.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nbBlocksStateChanged(evt);
            }
        });

        NbBlockJlabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        NbBlockJlabel.setText("Nombre de Blocks");

        DifficulteeJlabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DifficulteeJlabel.setText("Difficulté");

        difficultee.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficulteeStateChanged(evt);
            }
        });

        nbMaxJlabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nbMaxJlabel2.setText("de transactions par Block");

        nbMaxJlabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nbMaxJlabel1.setText("Nombre maximum");

        nbTransMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nbTransMaxStateChanged(evt);
            }
        });
        nbTransMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nbTransMaxMouseClicked(evt);
            }
        });

        jLabel1.setText("* -1 pour nombre aléatoire");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(difficultee, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DifficulteeJlabel))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(213, 213, 213)
                                .addComponent(nbBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                                .addComponent(nbTransMax, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(NbBlockJlabel)
                                        .addGap(113, 113, 113))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1)
                                        .addGap(103, 103, 103)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nbMaxJlabel2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nbMaxJlabel1)
                                        .addGap(24, 24, 24)))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(CreerBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nbMaxJlabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DifficulteeJlabel)
                            .addComponent(nbMaxJlabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(NbBlockJlabel)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nbBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nbTransMax, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(difficultee, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(CreerBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        quit1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        quit1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pierre\\Documents\\GitHub\\WoredCoin\\Images\\icons8-fermer-la-fenêtre-48.png")); // NOI18N
        quit1.setText("    Quitter");
        quit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit1ActionPerformed(evt);
            }
        });

        WoredCoinJlabel.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        WoredCoinJlabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pierre\\Documents\\GitHub\\WoredCoin\\Images\\icons8-pièces-de-monnaie-80.png")); // NOI18N
        WoredCoinJlabel.setText("              Wored Coin");

        Signature.setText("GODINO Pierre & ROLLAND Florian");

        reset.setText("Reset");
        reset.setEnabled(false);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        BlockchainCreationJlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BlockchainCreationJlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/icons8-ajouter-64.png"))); // NOI18N
        BlockchainCreationJlabel.setText("Créer une nouvelle BlockChain");

        javax.swing.GroupLayout onglet1Layout = new javax.swing.GroupLayout(onglet1);
        onglet1.setLayout(onglet1Layout);
        onglet1Layout.setHorizontalGroup(
            onglet1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet1Layout.createSequentialGroup()
                .addGroup(onglet1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(onglet1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(WoredCoinJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(onglet1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BlockchainCreationJlabel)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(onglet1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(onglet1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(onglet1Layout.createSequentialGroup()
                        .addComponent(quit1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, onglet1Layout.createSequentialGroup()
                        .addComponent(Signature)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        onglet1Layout.setVerticalGroup(
            onglet1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quit1)
                .addGap(109, 109, 109)
                .addComponent(WoredCoinJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(BlockchainCreationJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182)
                .addGroup(onglet1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Signature, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Créer une blockchain", onglet1);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        ImporterBlockchain.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ImporterBlockchain.setText("Importer");
        ImporterBlockchain.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ImporterBlockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImporterBlockchainActionPerformed(evt);
            }
        });

        ImporterBlockchainTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImporterBlockchainTXTActionPerformed(evt);
            }
        });

        importerJSONjlabel.setText("Entrer le nom du fichier JSON contenant la blockchain");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ImporterBlockchain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ImporterBlockchainTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importerJSONjlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(importerJSONjlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImporterBlockchainTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImporterBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        quit2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        quit2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pierre\\Documents\\GitHub\\WoredCoin\\Images\\icons8-fermer-la-fenêtre-48.png")); // NOI18N
        quit2.setText("    Quitter");
        quit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit2ActionPerformed(evt);
            }
        });

        ImporterJSONJlabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ImporterJSONJlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/icons8-json-96.png"))); // NOI18N
        ImporterJSONJlabel.setText("Importer un fichier JSON");

        RestaurerBlockChainJlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        RestaurerBlockChainJlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/icons8-restauration-filled.png"))); // NOI18N
        RestaurerBlockChainJlabel.setText("Restaurer une BlockChain");

        signature2.setText("GODINO Pierre & ROLLAND Florian");

        reset2.setText("Reset");
        reset2.setEnabled(false);
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout onglet2Layout = new javax.swing.GroupLayout(onglet2);
        onglet2.setLayout(onglet2Layout);
        onglet2Layout.setHorizontalGroup(
            onglet2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet2Layout.createSequentialGroup()
                .addGroup(onglet2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(onglet2Layout.createSequentialGroup()
                        .addGroup(onglet2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(onglet2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(quit2))
                            .addGroup(onglet2Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(ImporterJSONJlabel))
                            .addGroup(onglet2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(RestaurerBlockChainJlabel)))
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, onglet2Layout.createSequentialGroup()
                        .addComponent(signature2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        onglet2Layout.setVerticalGroup(
            onglet2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quit2)
                .addGap(97, 97, 97)
                .addComponent(ImporterJSONJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RestaurerBlockChainJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335)
                .addGroup(onglet2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signature2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reset2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane2.addTab("Importer une blockchain", onglet2);

        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));

        VerificationBlockchain.setBackground(new java.awt.Color(153, 0, 0));
        VerificationBlockchain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        VerificationBlockchain.setForeground(new java.awt.Color(255, 255, 255));
        VerificationBlockchain.setText("Vérifier l'intégrité de la blockchain");
        VerificationBlockchain.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        VerificationBlockchain.setEnabled(false);
        VerificationBlockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerificationBlockchainActionPerformed(evt);
            }
        });

        VerificationJlabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pierre\\Documents\\GitHub\\WoredCoin\\Images\\icons8-plan-de-traitement-96.png")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(VerificationJlabel)
                .addGap(33, 33, 33)
                .addComponent(VerificationBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VerificationBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VerificationJlabel))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 204, 0)));

        AfficherBlock.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AfficherBlock.setText("Afficher le block");
        AfficherBlock.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 0)));
        AfficherBlock.setEnabled(false);
        AfficherBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AfficherBlockActionPerformed(evt);
            }
        });

        AfficherBlockTXT.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 0)));

        OUJlabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        OUJlabel.setText("-- OU --");

        AfficherBlockchain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AfficherBlockchain.setText("Afficher ma blockchain");
        AfficherBlockchain.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 0)));
        AfficherBlockchain.setEnabled(false);
        AfficherBlockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AfficherBlockchainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AfficherBlockchain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AfficherBlockTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AfficherBlock, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OUJlabel)
                .addGap(287, 287, 287))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AfficherBlockTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AfficherBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OUJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AfficherBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));

        SauvegarderBlockchain.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        SauvegarderBlockchain.setText("Sauvegarder");
        SauvegarderBlockchain.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        SauvegarderBlockchain.setEnabled(false);
        SauvegarderBlockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SauvegarderBlockchainActionPerformed(evt);
            }
        });

        SauvegarderBlockchainTXT.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        SauvegarderBlockchainTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SauvegarderBlockchainTXTActionPerformed(evt);
            }
        });

        EntreJsonSauvegardeJlabel.setText("Entrer le nom du fichier JSON qui contiendra la blockchain");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SauvegarderBlockchainTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EntreJsonSauvegardeJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(SauvegarderBlockchain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(EntreJsonSauvegardeJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SauvegarderBlockchainTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SauvegarderBlockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        quit3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        quit3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pierre\\Documents\\GitHub\\WoredCoin\\Images\\icons8-fermer-la-fenêtre-48.png")); // NOI18N
        quit3.setText("    Quitter");
        quit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit3ActionPerformed(evt);
            }
        });

        signature3.setText("GODINO Pierre & ROLLAND Florian");

        SauvegarderBlockCHainJlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SauvegarderBlockCHainJlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/icons8-sauvegarder-64.png"))); // NOI18N
        SauvegarderBlockCHainJlabel.setText("Sauvegarder ma BlockChain");

        Affichagejlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Affichagejlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/icons8-liste-64.png"))); // NOI18N
        Affichagejlabel.setText("Affichage");

        javax.swing.GroupLayout onglet3Layout = new javax.swing.GroupLayout(onglet3);
        onglet3.setLayout(onglet3Layout);
        onglet3Layout.setHorizontalGroup(
            onglet3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet3Layout.createSequentialGroup()
                .addComponent(signature3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(onglet3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(onglet3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(onglet3Layout.createSequentialGroup()
                        .addGroup(onglet3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quit3)
                            .addComponent(Affichagejlabel)
                            .addComponent(SauvegarderBlockCHainJlabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        onglet3Layout.setVerticalGroup(
            onglet3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onglet3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quit3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Affichagejlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SauvegarderBlockCHainJlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(signature3))
        );

        jTabbedPane2.addTab("Gérer ma blockchain", onglet3);

        console.setEditable(false);
        console.setBackground(new java.awt.Color(0, 0, 0));
        console.setColumns(20);
        console.setForeground(new java.awt.Color(255, 255, 255));
        console.setRows(5);
        console.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(console);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 971, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    //Methode qui ecrit sur la console
    public void write(String txt) {
        console.append(txt + "\n");
    }
    
    
    //Methode qui desactive un bouton
    public static void disableButton(javax.swing.JButton button) {
        button.setEnabled(false);
    }
    
    //Methode qui active un bouton
    public void ableButton(javax.swing.JButton button) {
        button.setEnabled(true);
    }
    
    
    
    //Fonction qui affiche le detail de la blockchain
    public void map() {        
        write("Difficultée : " + String.valueOf(Parametres.getDifficulty()) +"\nNombre de Blocks : " + String.valueOf(Parametres.getNbBlock()) + "\nNombre de transaction maximum par block : " + String.valueOf(Parametres.getNbtransMax()));
        write(blockchain.parcourir());
        
    }
    
    
    
    //Methode qui cree une blockchain avec les parametres des jspinner
    public void creerBlockchain() {
        console.setForeground(Color.white);
        console.setText("");
        write("Création du block en cours...");
        this.blockchain = new BlockChain(true);
     
        for(int i = 2; i <= Parametres.getNbBlock(); i++) {
            write("Le block numéro " + String.valueOf(i) + " a été généré et miné    Son hash est " + blockchain.getBlockchain().get(i - 1).getHash());
        }
        
        write("\n");
        write("--------------------------------------------------------------------------------");
	write("La blockchain à été générée avec succès, selon les paramètres suivants :");
	write("Difficulte : " + Parametres.getDifficulty());
	write("Nombre de blocks : " + Parametres.getNbBlock());
	write("Nombre maximal de transactions par block : " + Parametres.getNbtransMax());
    }
    
    
    
    //Methode qui desactive les boutons de creation de blockchain et active ceux de gestion de blockchain
    public void gestionBoutonsCreation() {
        
        //on actives les boutons
        SauvegarderBlockchain.setEnabled(true);
        VerificationBlockchain.setEnabled(true);
        AfficherBlockchain.setEnabled(true);
        AfficherBlock.setEnabled(true);
        reset.setEnabled(true);
        reset2.setEnabled(true);
        
        //on désactive les bouttons
        ImporterBlockchain.setEnabled(false);
        CreerBlockchain.setEnabled(false);
        
        //on désactive les selecteurs de paramÃ¨tres(page 1)
        difficultee.setEnabled(false);
        nbBlocks.setEnabled(false);
        nbTransMax.setEnabled(false);
        
    }
    
    
    //Methode qui reactive les boutons de creation de blockchain et desactive ceux de gestion
    public void gestionBoutonsReset() {
        
        //on actives les boutons
        SauvegarderBlockchain.setEnabled(false);
        VerificationBlockchain.setEnabled(false);
        AfficherBlockchain.setEnabled(false);
        AfficherBlock.setEnabled(false);
        reset.setEnabled(false);
        reset2.setEnabled(false);
        
        //on désactive les bouttons
        ImporterBlockchain.setEnabled(true);
        CreerBlockchain.setEnabled(true);
        
        //on désactive les selecteurs de paramÃ¨tres(page 1)
        difficultee.setEnabled(true);
        nbBlocks.setEnabled(true);
        nbTransMax.setEnabled(true);
        
    }
        
        
        
    //Methode permettant de sauvegarder la blockchain dans un fichier au format JSON
    private void SauvegarderBlockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SauvegarderBlockchainActionPerformed
        // TODO add your handling code here:
        console.setText("");
        
        blockchain.jsonWrite(SauvegarderBlockchainTXT.getText());
        
        console.setForeground(Color.green);
        write("La BlockChain a été sauvegardée sous le nom de " + SauvegarderBlockchainTXT.getText());
    }//GEN-LAST:event_SauvegarderBlockchainActionPerformed

    
    
    
    //Methode qui controle le bouton de creation de blockchain
    private void CreerBlockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreerBlockchainActionPerformed
        // TODO add your handling code here:
        console.setText("");
        console.setForeground(Color.red);
        if ((int)difficultee.getValue() < 0)
            write("Erreur : La difficultée ne peut être négative.");
        
        else if ((int)nbBlocks.getValue() < -1 || (int)nbBlocks.getValue() == 0) {
            write("Erreur : La BlockChain doit avoir au minimum un bloc.");
        }
        
        else if((int)nbTransMax.getValue() < 1)
            write("Erreur : Un Block ne peut avoir moins d'une transaction.");
             
        else {
            creerBlockchain();
            gestionBoutonsCreation();
        }
    }//GEN-LAST:event_CreerBlockchainActionPerformed

    private void nbTransMaxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nbTransMaxMouseClicked
        // TODO add your handling code here:
        Parametres.setNbTransMax((int)nbTransMax.getValue());
    }//GEN-LAST:event_nbTransMaxMouseClicked

    private void nbTransMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nbTransMaxStateChanged
        // TODO add your handling code here:
        Parametres.setNbTransMax((int)nbTransMax.getValue());
    }//GEN-LAST:event_nbTransMaxStateChanged

    private void nbBlocksStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nbBlocksStateChanged
        // TODO add your handling code here:
        if ((int)nbBlocks.getValue() == -1) {
            Random random = new Random();
            int temp = random.nextInt(99) + 1;
            Parametres.setNbBlock(temp);
        }
        else   
            Parametres.setNbBlock((int)nbBlocks.getValue());
    }//GEN-LAST:event_nbBlocksStateChanged

    private void difficulteeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_difficulteeStateChanged
        // TODO add your handling code here:
        Parametres.setDifficult((int)difficultee.getValue());
    }//GEN-LAST:event_difficulteeStateChanged

    private void VerificationBlockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerificationBlockchainActionPerformed
        // TODO add your handling code here:
        console.setForeground(Color.green);
        console.setText("");
        write("---------------------------------- Verifications de la blockchain ----------------------------------");
        write("--------- Verification 1 ---------");
        write(blockchain.verif1());
        write("--------- Verification 2 ---------");
        write(blockchain.verif2());
        
        write("\n\nVérification terminée.");
    }//GEN-LAST:event_VerificationBlockchainActionPerformed
    

    //Methode qui gere l'importation de blockchain depuis un fichier au format JSON 
    private void ImporterBlockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImporterBlockchainActionPerformed
        // TODO add your handling code here:
        console.setForeground(Color.green);
        blockchain = new BlockChain(ImporterBlockchainTXT.getText());
        write("La BlockChain " + ImporterBlockchainTXT.getText() + " a été importée avec succès");
        
        gestionBoutonsCreation();
    }//GEN-LAST:event_ImporterBlockchainActionPerformed

    private void SauvegarderBlockchainTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SauvegarderBlockchainTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SauvegarderBlockchainTXTActionPerformed

    private void ImporterBlockchainTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImporterBlockchainTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ImporterBlockchainTXTActionPerformed

    
    //Methode qui permet au bouton d'affichage de la blockchain d'afficher cette derniere dans la console 
    private void AfficherBlockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AfficherBlockchainActionPerformed
        // TODO add your handling code here:
        console.setText("");
        console.setForeground(Color.yellow);
        map();
    }//GEN-LAST:event_AfficherBlockchainActionPerformed

    
    
    //Methode qui permet au bouton d'affichage de block d'afficher le block en question dans la console 
    private void AfficherBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AfficherBlockActionPerformed
        // TODO add your handling code here:
        console.setText("");
        int indexBlock = (int)AfficherBlockTXT.getValue();
        
        if ( Parametres.getNbBlock() < indexBlock || indexBlock <= 0) {
            console.setForeground(Color.red);
            write("Erreur, le block demandé n'existe pas");
        }
        else {
            console.setForeground(Color.yellow);
            write(blockchain.getBlockchain().get(indexBlock - 1).printBlock());
        }
    }//GEN-LAST:event_AfficherBlockActionPerformed

    
    
    
    //Methodes qui gerent les boutons pour quitter
    private void quit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quit1ActionPerformed

    private void quit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quit2ActionPerformed

    private void quit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quit3ActionPerformed

    
    
    
    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        // TODO add your handling code here:
        gestionBoutonsReset();
    }//GEN-LAST:event_reset2ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        gestionBoutonsReset();
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
        
        
        
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Affichagejlabel;
    private javax.swing.JButton AfficherBlock;
    private javax.swing.JSpinner AfficherBlockTXT;
    private javax.swing.JButton AfficherBlockchain;
    private javax.swing.JLabel BlockchainCreationJlabel;
    private javax.swing.JButton CreerBlockchain;
    private javax.swing.JLabel DifficulteeJlabel;
    private javax.swing.JLabel EntreJsonSauvegardeJlabel;
    private javax.swing.JButton ImporterBlockchain;
    private javax.swing.JTextField ImporterBlockchainTXT;
    private javax.swing.JLabel ImporterJSONJlabel;
    private javax.swing.JLabel NbBlockJlabel;
    private javax.swing.JLabel OUJlabel;
    private javax.swing.JLabel RestaurerBlockChainJlabel;
    private javax.swing.JLabel SauvegarderBlockCHainJlabel;
    private javax.swing.JButton SauvegarderBlockchain;
    private javax.swing.JTextField SauvegarderBlockchainTXT;
    private javax.swing.JLabel Signature;
    private javax.swing.JButton VerificationBlockchain;
    private javax.swing.JLabel VerificationJlabel;
    private javax.swing.JLabel WoredCoinJlabel;
    private javax.swing.JTextArea console;
    private javax.swing.JSpinner difficultee;
    private javax.swing.JLabel importerJSONjlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JSpinner nbBlocks;
    private javax.swing.JLabel nbMaxJlabel1;
    private javax.swing.JLabel nbMaxJlabel2;
    private javax.swing.JSpinner nbTransMax;
    private javax.swing.JPanel onglet1;
    private javax.swing.JPanel onglet2;
    private javax.swing.JPanel onglet3;
    private javax.swing.JButton quit1;
    private javax.swing.JButton quit2;
    private javax.swing.JButton quit3;
    private javax.swing.JButton reset;
    private javax.swing.JButton reset2;
    private javax.swing.JLabel signature2;
    private javax.swing.JLabel signature3;
    // End of variables declaration//GEN-END:variables
}
